/////////////////
// Semantic.gs // for LESS: http://lesscss.org/
/////////////////

// Defaults which you can freely override
@column-width: 48px;
@gutter-width: 0;
@columns: 24;

// Utility variable â€” you should never need to modify this
@gridsystem-width: (@column-width*@columns) + (@gutter-width*@columns) * 1px;

// Set @total-width to 100% for a fluid layout
// @total-width: @gridsystem-width;
@total-width: 100%;

.grid-row(@column: @columns) {
	display: block;
	width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width);
	margin-left: @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1);
	margin-right: @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1);
	// *width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width)-@correction;
	// *margin-left: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1)-@correction;
	// *margin-right: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1)-@correction;
	.clearfix;
}
.grid-column(@x,@column:@columns) {
	display: inline;
	float: left;
	width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
	margin-left: @total-width*((@gutter-width*.5)/@gridsystem-width);
	margin-right: @total-width*((@gutter-width*.5)/@gridsystem-width);
	// *width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width)-@correction;
	// *margin-left: 0 @total-width*((@gutter-width*.5)/@gridsystem-width)-@correction;
	// *margin-right: 0 @total-width*((@gutter-width*.5)/@gridsystem-width)-@correction;
}
.grid-push(@offset:1) {
	margin-left: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}
.grid-pull(@offset:1) {
	margin-right: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}